CREATE TABLE Paiement(
   Id_Paiement COUNTER,
   mode_paiement VARCHAR(255) NOT NULL,
   PRIMARY KEY(Id_Paiement),
   UNIQUE(mode_paiement)
);

CREATE TABLE Adresse(
   Id_Adresse COUNTER,
   numero_rue_adresse SMALLINT NOT NULL,
   libelle_rue_adresse VARCHAR(255) NOT NULL,
   code_postal_adresse INT NOT NULL,
   nom_ville_adresse VARCHAR(255) NOT NULL,
   telephone_adresse INT NOT NULL,
   email_adresse VARCHAR(50) NOT NULL,
   PRIMARY KEY(Id_Adresse),
   UNIQUE(email_adresse)
);

CREATE TABLE Type_Permis(
   Id_Type_permis COUNTER,
   nom_type_permis VARCHAR(50) NOT NULL,
   PRIMARY KEY(Id_Type_permis),
   UNIQUE(nom_type_permis)
);

CREATE TABLE Type_Voiture(
   Id_Type_Voiture COUNTER,
   nom_type_voiture VARCHAR(255) NOT NULL,
   prix_journalier_type_voiture DECIMAL(5,2) NOT NULL,
   prix_caution_type_voiture VARCHAR(50),
   PRIMARY KEY(Id_Type_Voiture),
   UNIQUE(nom_type_voiture)
);

CREATE TABLE Type_Camion(
   Id_Type_Camion COUNTER,
   nom_type_camion VARCHAR(255) NOT NULL,
   prix_journalier_type_camion DECIMAL(15,2) NOT NULL,
   prix_caution_type_camion DECIMAL(15,2),
   PRIMARY KEY(Id_Type_Camion),
   UNIQUE(nom_type_camion)
);

CREATE TABLE Statut_Facture(
   Id_Statut_Facture COUNTER,
   statut_facture VARCHAR(255) NOT NULL,
   PRIMARY KEY(Id_Statut_Facture),
   UNIQUE(statut_facture)
);

CREATE TABLE Agence(
   Id_Agence COUNTER,
   nom_agence VARCHAR(255) NOT NULL,
   tresorerie_agence DECIMAL(15,2) NOT NULL,
   PRIMARY KEY(Id_Agence),
   UNIQUE(nom_agence)
);

CREATE TABLE Statut_Vehicule(
   Id_Statut_Vehicule COUNTER,
   nom_statut_vehicule VARCHAR(255) NOT NULL,
   PRIMARY KEY(Id_Statut_Vehicule),
   UNIQUE(nom_statut_vehicule)
);

CREATE TABLE Vehicule(
   Id_Vehicule COUNTER,
   marque_vehicule VARCHAR(255) NOT NULL,
   modele_vehicule VARCHAR(255) NOT NULL,
   immatriculation_vehicule VARCHAR(11) NOT NULL,
   kilometrage_vehicule VARCHAR(50),
   Id_Statut_Vehicule INT NOT NULL,
   PRIMARY KEY(Id_Vehicule),
   UNIQUE(immatriculation_vehicule),
   FOREIGN KEY(Id_Statut_Vehicule) REFERENCES Statut_Vehicule(Id_Statut_Vehicule)
);

CREATE TABLE Client(
   Id_Client COUNTER,
   nom_client VARCHAR(255) NOT NULL,
   prenom_client VARCHAR(255) NOT NULL,
   adresse_client VARCHAR(255) NOT NULL,
   Id_Adresse INT NOT NULL,
   PRIMARY KEY(Id_Client),
   FOREIGN KEY(Id_Adresse) REFERENCES Adresse(Id_Adresse)
);

CREATE TABLE Voiture(
   Id_Vehicule INT,
   nombre_place_voiture VARCHAR(50),
   Id_Type_Voiture INT NOT NULL,
   PRIMARY KEY(Id_Vehicule),
   FOREIGN KEY(Id_Vehicule) REFERENCES Vehicule(Id_Vehicule),
   FOREIGN KEY(Id_Type_Voiture) REFERENCES Type_Voiture(Id_Type_Voiture)
);

CREATE TABLE Camion(
   Id_Vehicule INT,
   volume_camion VARCHAR(50),
   Id_Type_Camion INT NOT NULL,
   PRIMARY KEY(Id_Vehicule),
   FOREIGN KEY(Id_Vehicule) REFERENCES Vehicule(Id_Vehicule),
   FOREIGN KEY(Id_Type_Camion) REFERENCES Type_Camion(Id_Type_Camion)
);

CREATE TABLE Permis(
   Id_Permis COUNTER,
   numero_permis INT NOT NULL,
   date_obtention_permis DATE NOT NULL,
   Id_Client INT NOT NULL,
   Id_Type_permis INT NOT NULL,
   PRIMARY KEY(Id_Permis),
   UNIQUE(Id_Client),
   UNIQUE(numero_permis),
   FOREIGN KEY(Id_Client) REFERENCES Client(Id_Client),
   FOREIGN KEY(Id_Type_permis) REFERENCES Type_Permis(Id_Type_permis)
);

CREATE TABLE Maintenance(
   Id_Maintenance COUNTER,
   date_debut_maintenance DATE NOT NULL,
   date_fin_maintenance DATE NOT NULL,
   cout_maintenance DECIMAL(15,2) NOT NULL,
   Id_Vehicule INT NOT NULL,
   PRIMARY KEY(Id_Maintenance),
   FOREIGN KEY(Id_Vehicule) REFERENCES Vehicule(Id_Vehicule)
);

CREATE TABLE Facture(
   Id_Facture COUNTER,
   numero_facture INT NOT NULL,
   cout_facture DECIMAL(15,2) NOT NULL,
   nom_client_facture VARCHAR(255) NOT NULL,
   Id_Paiement INT NOT NULL,
   Id_Statut_Facture INT NOT NULL,
   PRIMARY KEY(Id_Facture),
   UNIQUE(Id_Paiement),
   UNIQUE(numero_facture),
   FOREIGN KEY(Id_Paiement) REFERENCES Paiement(Id_Paiement),
   FOREIGN KEY(Id_Statut_Facture) REFERENCES Statut_Facture(Id_Statut_Facture)
);

CREATE TABLE Reservation(
   Id_Reservation COUNTER,
   date_debut_reservation DATE NOT NULL,
   date_fin_prevu_reservation DATE NOT NULL,
   kilometrage_debut_reservation INT NOT NULL,
   kilometrage_fin_reservation INT,
   date_fin_reel_reservation DATE,
   Id_Facture INT NOT NULL,
   Id_Client INT NOT NULL,
   Id_Vehicule INT NOT NULL,
   PRIMARY KEY(Id_Reservation),
   UNIQUE(Id_Facture),
   FOREIGN KEY(Id_Facture) REFERENCES Facture(Id_Facture),
   FOREIGN KEY(Id_Client) REFERENCES Client(Id_Client),
   FOREIGN KEY(Id_Vehicule) REFERENCES Vehicule(Id_Vehicule)
);
